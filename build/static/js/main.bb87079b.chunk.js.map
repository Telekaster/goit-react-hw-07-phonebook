{"version":3,"sources":["redux/actions.js","redux/reducers.js","redux/store.js","components/ContactForm/ContactForm .jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["addContact","createAction","contact","payload","deleteContact","filterContacts","value","contactReducer","createReducer","state","contactsArr","elementForRemove","find","item","key","index","indexOf","splice","filterReducer","reducers","combineReducers","store","configureStore","reducer","ContactForm","handleChange","handleAddContact","className","onChange","type","name","pattern","title","required","onClick","Filter","ContactList","filter","contacts","undefined","map","number","id","toLowerCase","includes","App","useState","setName","setNumber","dispatch","useDispatch","useSelector","evt","target","alert","newContact","shortid","generate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb87079b.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"phonebook/add\", (contact) => {\r\n  return {\r\n    payload: { ...contact },\r\n  };\r\n});\r\n\r\nexport const deleteContact = createAction(\"phonebook/remove\", (contact) => {\r\n  return {\r\n    payload: { ...contact },\r\n  };\r\n});\r\n\r\nexport const filterContacts = createAction(\"phonebook/filter\", (value) => {\r\n  return { payload: value };\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, filterContacts } from \"./actions\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst contactReducer = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => {\r\n    const contactsArr = [...state];\r\n    const elementForRemove = contactsArr.find((item) => item.key === payload);\r\n    const index = contactsArr.indexOf(elementForRemove);\r\n    contactsArr.splice(index, 1);\r\n    return (state = contactsArr);\r\n  },\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContacts]: (state, { payload }) => {\r\n    return (state = payload);\r\n  },\r\n});\r\n\r\nexport const reducers = combineReducers({\r\n  contactReducer,\r\n  filterReducer,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { reducers } from \"./reducers\";\r\n\r\nexport const store = configureStore({ reducer: reducers });\r\n","import React from \"react\";\nimport styles from \"./ContactForm.css\";\n\nexport default function ContactForm({ handleChange, handleAddContact }) {\n  return (\n    <div className=\"input__area\">\n      <p>Name</p>\n      <input\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <p>Phone</p>\n      <input type=\"tel\" name=\"tel\" onChange={handleChange} />\n\n      <button type=\"button\" className=\"input__btn\" onClick={handleAddContact}>\n        Add contact\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction Filter({ filterContacts }) {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" onChange={filterContacts} />\n    </div>\n  );\n}\n\nexport default Filter;\n","import React from \"react\";\n\nimport styles from \"./ContactList.css\";\n\nexport default function ContactList({ filter, contacts, deleteContact }) {\n  return (\n    <div className=\"contacts\">\n      <ul className=\"contacts__list\">\n        {filter === undefined\n          ? contacts.map((item) => {\n              return (\n                <li key={item.key}>\n                  {`${item.name}: ${item.number}`}{\" \"}\n                  <button\n                    onClick={deleteContact}\n                    id={item.key}\n                    type=\"button\"\n                    className=\"contacts__list_btn\"\n                  >\n                    Delete\n                  </button>{\" \"}\n                </li>\n              );\n            })\n          : contacts\n              .filter((item) =>\n                item.name.toLowerCase().includes(filter.toLowerCase())\n              )\n              .map((item) => {\n                return (\n                  <li key={item.key}>\n                    {`${item.name}: ${item.number}`}{\" \"}\n                    <button\n                      onClick={deleteContact}\n                      type=\"button\"\n                      className=\"contacts__list_btn\"\n                    >\n                      Delete\n                    </button>{\" \"}\n                  </li>\n                );\n              })}\n      </ul>\n    </div>\n  );\n}\n\n// export default function ContactList({ filter, contacts, deleteContact }) {\n//   return (\n//     <div className=\"contacts\">\n//       <ul className=\"contacts__list\">\n//         {filter === undefined\n//           ? contacts.map((item) => {\n//               return (\n//                 <li key={item.key}>\n//                   {`${item.name}: ${item.number}`}{\" \"}\n//                   <button\n//                     onClick={deleteContact}\n//                     id={item.key}\n//                     type=\"button\"\n//                     className=\"contacts__list_btn\"\n//                   >\n//                     Delete\n//                   </button>{\" \"}\n//                 </li>\n//               );\n//             })\n//           : contacts\n//               .filter((item) =>\n//                 item.name.toLowerCase().includes(filter.toLowerCase())\n//               )\n//               .map((item) => {\n//                 return (\n//                   <li key={item.key}>\n//                     {`${item.name}: ${item.number}`}{\" \"}\n//                     <button\n//                       onClick={deleteContact}\n//                       type=\"button\"\n//                       className=\"contacts__list_btn\"\n//                     >\n//                       Delete\n//                     </button>{\" \"}\n//                   </li>\n//                 );\n//               })}\n//       </ul>\n//     </div>\n//   );\n// }\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact, deleteContact, filterContacts } from \"./redux/actions\";\nimport { store } from \"./redux/store\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm/ContactForm \";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nexport default function App() {\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n  const dispatch = useDispatch();\n  const contacts = useSelector((store) => {\n    return store.contactReducer;\n  });\n  const filter = useSelector((store) => {\n    return store.filterReducer;\n  });\n\n  function handleChange(evt) {\n    switch (evt.target.name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n\n      case \"tel\":\n        setNumber(evt.target.value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleAddContact() {\n    if (\n      contacts.find((contact) => {\n        return contact.name === name;\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        key: shortid.generate(),\n        name: name,\n        number: number,\n      };\n\n      dispatch(addContact(newContact));\n    }\n  }\n\n  function filterer(evt) {\n    dispatch(filterContacts(evt.target.value));\n  }\n\n  function removeContact(evt) {\n    const id = evt.target.id;\n\n    dispatch(deleteContact(id));\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm\n        handleChange={handleChange}\n        handleAddContact={handleAddContact}\n      />\n\n      <h2>Contacts</h2>\n      <Filter filterContacts={filterer} />\n\n      <ContactList\n        filter={filter}\n        contacts={contacts}\n        key={contacts.key}\n        deleteContact={removeContact}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}